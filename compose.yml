services:
  anvil:
    build:
      dockerfile: Dockerfile.anvil
    volumes:
      - ./data/anvil:/state
    environment:
      ANVIL_STATE: "/state/anvil"
      ANVIL_STATE_INTERVAL: 10
      ANVIL_CHAIN_ID: 7566690 # sub -> hex -> decimal
      ANVIL_AUTO_IMPERSONATE: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rpc.entrypoints=web"
      - "traefik.http.routers.rpc.middlewares=auth"
      - "traefik.http.routers.rpc.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.rpc.tls=true"
      - "traefik.http.routers.rpc.tls.certresolver=resolver"
      - "traefik.http.services.rpc.loadbalancer.server.port=8545"
      
  faucet:
    build:
      dockerfile: Dockerfile.faucet
    depends_on:
      - anvil
    environment:
      PORT: 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.faucet.entrypoints=web"
      - "traefik.http.routers.faucet.middlewares=auth"
      - "traefik.http.routers.faucet.rule=Host(`faucet.${DOMAIN}`)"
      - "traefik.http.routers.faucet.tls=true"
      - "traefik.http.routers.faucet.tls.certresolver=resolver"
      - "traefik.http.services.faucet.loadbalancer.server.port=80"

  otterscan:
    image: otterscan/otterscan:v2.6.1
    volumes:
      - ./config/otterscan/config.json:/usr/share/nginx/html/config.json
    environment:
      DISABLE_CONFIG_OVERWRITE: "1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.explorer.entrypoints=web"
      - "traefik.http.routers.explorer.rule=Host(`explorer.${DOMAIN}`)"
      - "traefik.http.routers.explorer.middlewares=auth"
      - "traefik.http.routers.explorer.tls=true"
      - "traefik.http.routers.explorer.tls.certresolver=resolver"
      - "traefik.http.services.explorer.loadbalancer.server.port=80"

  sourcify:
    image: ghcr.io/ethereum/sourcify/server:staging
    volumes:
      - ./data/sourcify:/data
      - ./config/sourcify/chains.json:/home/app/services/server/dist/sourcify-chains.json
      - ./config/sourcify/local.js:/home/app/services/server/dist/config/local.js
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sourcify.entrypoints=web"
      - "traefik.http.routers.sourcify.rule=Host(`sourcify.${DOMAIN}`)"
      - "traefik.http.routers.sourcify.tls=true"
      - "traefik.http.routers.sourcify.tls.certresolver=resolver"
      - "traefik.http.services.sourcify.loadbalancer.server.port=5555"

  traefik:
    image: "traefik:v3.1"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/traefik/static.yml:/etc/traefik/traefik.yml"
      - "./config/traefik/usersFile:/etc/traefik/usersFile"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=resolver"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.digestauth.usersFile=/etc/traefik/usersFile"
